
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = ';\xa5}\x9b\xeap\xbd\xe9C\x96`\x8aW\xcd\x91\x87'
    
_lr_action_items = {'PR_OR':([17,18,19,20,21,22,35,36,37,38,39,41,42,],[-20,-21,33,-19,-22,33,-14,-12,-18,-13,-15,33,33,]),'FIN_LINEA':([1,2,3,9,15,17,18,20,21,23,24,25,37,48,49,],[10,-6,-4,-5,10,-20,-21,-19,-22,-10,-11,-22,-18,-9,-8,]),'PR_IF':([0,1,2,3,9,10,15,17,18,20,21,23,24,25,37,44,45,48,49,],[4,4,-6,-4,-5,4,-7,-20,-21,-19,-22,-10,-11,-22,-18,4,4,-9,-8,]),'OP_MENORIGUAL':([16,17,18,20,21,37,],[26,-20,-21,-19,-22,-18,]),'OP_MAYOR':([16,17,18,20,21,37,],[27,-20,-21,-19,-22,-18,]),'PAREN_CIERRA':([17,18,19,20,21,22,35,36,37,38,39,41,42,],[-20,-21,31,-19,-22,34,-14,-12,-18,-13,-15,-16,-17,]),'ABRE_BLOQUE':([40,43,],[44,45,]),'OP_AS':([8,25,],[14,14,]),'OP_DISTINTO':([16,17,18,20,21,37,],[30,-20,-21,-19,-22,-18,]),'PR_AND':([17,18,19,20,21,22,35,36,37,38,39,41,42,],[-20,-21,32,-19,-22,32,-14,-12,-18,-13,-15,32,32,]),'PAREN_ABRE':([4,7,],[12,13,]),'CIERRA_BLOQUE':([1,2,3,9,11,15,17,18,20,21,23,24,25,37,46,47,48,49,],[-3,-6,-4,-5,-2,-7,-20,-21,-19,-22,-10,-11,-22,-18,48,49,-9,-8,]),'OP_SUMA':([16,17,18,20,21,23,25,35,36,37,38,39,],[28,-20,-21,-19,-22,28,-22,28,28,-18,28,28,]),'OP_MENOR':([16,17,18,20,21,37,],[29,-20,-21,-19,-22,-18,]),'DOS_PUNTOS':([31,34,],[40,43,]),'CTE_ENT':([12,13,14,26,27,28,29,30,32,33,],[18,18,18,18,18,18,18,18,18,18,]),'PR_WHILE':([0,1,2,3,9,10,15,17,18,20,21,23,24,25,37,44,45,48,49,],[7,7,-6,-4,-5,7,-7,-20,-21,-19,-22,-10,-11,-22,-18,7,7,-9,-8,]),'ID':([0,1,2,3,9,10,12,13,14,15,17,18,20,21,23,24,25,26,27,28,29,30,32,33,37,44,45,48,49,],[8,8,-6,-4,-5,8,21,21,25,-7,-20,-21,-19,-22,-10,-11,-22,21,21,21,21,21,21,21,-18,8,8,-9,-8,]),'$end':([1,2,3,5,6,9,11,15,17,18,20,21,23,24,25,37,48,49,],[-3,-6,-4,0,-1,-5,-2,-7,-20,-21,-19,-22,-10,-11,-22,-18,-9,-8,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expresion':([12,13,14,26,27,29,30,32,33,],[16,16,23,35,36,38,39,16,16,]),'sentencia':([0,1,10,44,45,],[1,1,15,1,1,]),'sentencia_while':([0,1,10,44,45,],[2,2,2,2,2,]),'asig':([0,1,10,14,44,45,],[3,3,3,24,3,3,]),'condicion':([12,13,32,33,],[19,22,41,42,]),'termino':([12,13,14,26,27,28,29,30,32,33,],[20,20,20,20,20,37,20,20,20,20,]),'programa':([0,],[5,]),'factor':([12,13,14,26,27,28,29,30,32,33,],[17,17,17,17,17,17,17,17,17,17,]),'bloque':([0,1,44,45,],[6,11,46,47,]),'sentencia_condicional':([0,1,10,44,45,],[9,9,9,9,9,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> bloque','programa',1,'p_programa','lenguaje.py',50),
  ('bloque -> sentencia bloque','bloque',2,'p_bloque','lenguaje.py',56),
  ('bloque -> sentencia','bloque',1,'p_bloque_simple','lenguaje.py',63),
  ('sentencia -> asig','sentencia',1,'p_sentencia','lenguaje.py',70),
  ('sentencia -> sentencia_condicional','sentencia',1,'p_sentencia','lenguaje.py',71),
  ('sentencia -> sentencia_while','sentencia',1,'p_sentencia','lenguaje.py',72),
  ('sentencia -> sentencia FIN_LINEA sentencia','sentencia',3,'p_sentencia_sentencia','lenguaje.py',79),
  ('sentencia_while -> PR_WHILE PAREN_ABRE condicion PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE bloque CIERRA_BLOQUE','sentencia_while',8,'p_sentencia_while','lenguaje.py',85),
  ('sentencia_condicional -> PR_IF PAREN_ABRE condicion PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE bloque CIERRA_BLOQUE','sentencia_condicional',8,'p_sentencia_condicional','lenguaje.py',92),
  ('asig -> ID OP_AS expresion','asig',3,'p_asig','lenguaje.py',99),
  ('asig -> ID OP_AS asig','asig',3,'p_asig','lenguaje.py',100),
  ('condicion -> expresion OP_MAYOR expresion','condicion',3,'p_condicion','lenguaje.py',106),
  ('condicion -> expresion OP_MENOR expresion','condicion',3,'p_condicion','lenguaje.py',107),
  ('condicion -> expresion OP_MENORIGUAL expresion','condicion',3,'p_condicion','lenguaje.py',108),
  ('condicion -> expresion OP_DISTINTO expresion','condicion',3,'p_condicion','lenguaje.py',109),
  ('condicion -> condicion PR_AND condicion','condicion',3,'p_condicion','lenguaje.py',110),
  ('condicion -> condicion PR_OR condicion','condicion',3,'p_condicion','lenguaje.py',111),
  ('expresion -> expresion OP_SUMA termino','expresion',3,'p_expresion','lenguaje.py',116),
  ('expresion -> termino','expresion',1,'p_expression_term','lenguaje.py',121),
  ('termino -> factor','termino',1,'p_term_factor','lenguaje.py',125),
  ('factor -> CTE_ENT','factor',1,'p_factor','lenguaje.py',130),
  ('factor -> ID','factor',1,'p_factor','lenguaje.py',131),
]
