Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> bloque
Rule 2     bloque -> sentencia bloque
Rule 3     bloque -> sentencia
Rule 4     sentencia -> asig
Rule 5     sentencia -> sentencia_condicional
Rule 6     sentencia -> sentencia_while
Rule 7     sentencia -> sentencia FIN_LINEA sentencia
Rule 8     sentencia_while -> PR_WHILE PAREN_ABRE condicion PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE bloque CIERRA_BLOQUE
Rule 9     sentencia_condicional -> PR_IF PAREN_ABRE condicion PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE bloque CIERRA_BLOQUE
Rule 10    asig -> ID OP_AS expresion
Rule 11    asig -> ID OP_AS asig
Rule 12    condicion -> expresion OP_MAYOR expresion
Rule 13    condicion -> expresion OP_MENOR expresion
Rule 14    condicion -> expresion OP_MENORIGUAL expresion
Rule 15    condicion -> expresion OP_DISTINTO expresion
Rule 16    condicion -> condicion PR_AND condicion
Rule 17    condicion -> condicion PR_OR condicion
Rule 18    expresion -> expresion OP_SUMA termino
Rule 19    expresion -> termino
Rule 20    termino -> factor
Rule 21    factor -> CTE_ENT
Rule 22    factor -> ID

Terminals, with rules where they appear

ABRE_BLOQUE          : 8 9
CIERRA_BLOQUE        : 8 9
CTE_ENT              : 21
DOS_PUNTOS           : 8 9
FIN_LINEA            : 7
ID                   : 10 11 22
OP_AS                : 10 11
OP_DISTINTO          : 15
OP_MAYOR             : 12
OP_MENOR             : 13
OP_MENORIGUAL        : 14
OP_SUMA              : 18
PAREN_ABRE           : 8 9
PAREN_CIERRA         : 8 9
PR_AND               : 16
PR_IF                : 9
PR_OR                : 17
PR_WHILE             : 8
error                : 

Nonterminals, with rules where they appear

asig                 : 4 11
bloque               : 1 2 8 9
condicion            : 8 9 16 16 17 17
expresion            : 10 12 12 13 13 14 14 15 15 18
factor               : 20
programa             : 0
sentencia            : 2 3 7 7
sentencia_condicional : 5
sentencia_while      : 6
termino              : 18 19

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . bloque
    (2) bloque -> . sentencia bloque
    (3) bloque -> . sentencia
    (4) sentencia -> . asig
    (5) sentencia -> . sentencia_condicional
    (6) sentencia -> . sentencia_while
    (7) sentencia -> . sentencia FIN_LINEA sentencia
    (10) asig -> . ID OP_AS expresion
    (11) asig -> . ID OP_AS asig
    (9) sentencia_condicional -> . PR_IF PAREN_ABRE condicion PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE bloque CIERRA_BLOQUE
    (8) sentencia_while -> . PR_WHILE PAREN_ABRE condicion PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE bloque CIERRA_BLOQUE

    ID              shift and go to state 8
    PR_IF           shift and go to state 4
    PR_WHILE        shift and go to state 7

    sentencia                      shift and go to state 1
    sentencia_while                shift and go to state 2
    asig                           shift and go to state 3
    programa                       shift and go to state 5
    bloque                         shift and go to state 6
    sentencia_condicional          shift and go to state 9

state 1

    (2) bloque -> sentencia . bloque
    (3) bloque -> sentencia .
    (7) sentencia -> sentencia . FIN_LINEA sentencia
    (2) bloque -> . sentencia bloque
    (3) bloque -> . sentencia
    (4) sentencia -> . asig
    (5) sentencia -> . sentencia_condicional
    (6) sentencia -> . sentencia_while
    (7) sentencia -> . sentencia FIN_LINEA sentencia
    (10) asig -> . ID OP_AS expresion
    (11) asig -> . ID OP_AS asig
    (9) sentencia_condicional -> . PR_IF PAREN_ABRE condicion PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE bloque CIERRA_BLOQUE
    (8) sentencia_while -> . PR_WHILE PAREN_ABRE condicion PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE bloque CIERRA_BLOQUE

    $end            reduce using rule 3 (bloque -> sentencia .)
    CIERRA_BLOQUE   reduce using rule 3 (bloque -> sentencia .)
    FIN_LINEA       shift and go to state 10
    ID              shift and go to state 8
    PR_IF           shift and go to state 4
    PR_WHILE        shift and go to state 7

    sentencia                      shift and go to state 1
    sentencia_while                shift and go to state 2
    asig                           shift and go to state 3
    sentencia_condicional          shift and go to state 9
    bloque                         shift and go to state 11

state 2

    (6) sentencia -> sentencia_while .

    FIN_LINEA       reduce using rule 6 (sentencia -> sentencia_while .)
    ID              reduce using rule 6 (sentencia -> sentencia_while .)
    PR_IF           reduce using rule 6 (sentencia -> sentencia_while .)
    PR_WHILE        reduce using rule 6 (sentencia -> sentencia_while .)
    CIERRA_BLOQUE   reduce using rule 6 (sentencia -> sentencia_while .)
    $end            reduce using rule 6 (sentencia -> sentencia_while .)


state 3

    (4) sentencia -> asig .

    FIN_LINEA       reduce using rule 4 (sentencia -> asig .)
    ID              reduce using rule 4 (sentencia -> asig .)
    PR_IF           reduce using rule 4 (sentencia -> asig .)
    PR_WHILE        reduce using rule 4 (sentencia -> asig .)
    CIERRA_BLOQUE   reduce using rule 4 (sentencia -> asig .)
    $end            reduce using rule 4 (sentencia -> asig .)


state 4

    (9) sentencia_condicional -> PR_IF . PAREN_ABRE condicion PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE bloque CIERRA_BLOQUE

    PAREN_ABRE      shift and go to state 12


state 5

    (0) S' -> programa .



state 6

    (1) programa -> bloque .

    $end            reduce using rule 1 (programa -> bloque .)


state 7

    (8) sentencia_while -> PR_WHILE . PAREN_ABRE condicion PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE bloque CIERRA_BLOQUE

    PAREN_ABRE      shift and go to state 13


state 8

    (10) asig -> ID . OP_AS expresion
    (11) asig -> ID . OP_AS asig

    OP_AS           shift and go to state 14


state 9

    (5) sentencia -> sentencia_condicional .

    FIN_LINEA       reduce using rule 5 (sentencia -> sentencia_condicional .)
    ID              reduce using rule 5 (sentencia -> sentencia_condicional .)
    PR_IF           reduce using rule 5 (sentencia -> sentencia_condicional .)
    PR_WHILE        reduce using rule 5 (sentencia -> sentencia_condicional .)
    CIERRA_BLOQUE   reduce using rule 5 (sentencia -> sentencia_condicional .)
    $end            reduce using rule 5 (sentencia -> sentencia_condicional .)


state 10

    (7) sentencia -> sentencia FIN_LINEA . sentencia
    (4) sentencia -> . asig
    (5) sentencia -> . sentencia_condicional
    (6) sentencia -> . sentencia_while
    (7) sentencia -> . sentencia FIN_LINEA sentencia
    (10) asig -> . ID OP_AS expresion
    (11) asig -> . ID OP_AS asig
    (9) sentencia_condicional -> . PR_IF PAREN_ABRE condicion PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE bloque CIERRA_BLOQUE
    (8) sentencia_while -> . PR_WHILE PAREN_ABRE condicion PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE bloque CIERRA_BLOQUE

    ID              shift and go to state 8
    PR_IF           shift and go to state 4
    PR_WHILE        shift and go to state 7

    sentencia                      shift and go to state 15
    sentencia_while                shift and go to state 2
    asig                           shift and go to state 3
    sentencia_condicional          shift and go to state 9

state 11

    (2) bloque -> sentencia bloque .

    $end            reduce using rule 2 (bloque -> sentencia bloque .)
    CIERRA_BLOQUE   reduce using rule 2 (bloque -> sentencia bloque .)


state 12

    (9) sentencia_condicional -> PR_IF PAREN_ABRE . condicion PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE bloque CIERRA_BLOQUE
    (12) condicion -> . expresion OP_MAYOR expresion
    (13) condicion -> . expresion OP_MENOR expresion
    (14) condicion -> . expresion OP_MENORIGUAL expresion
    (15) condicion -> . expresion OP_DISTINTO expresion
    (16) condicion -> . condicion PR_AND condicion
    (17) condicion -> . condicion PR_OR condicion
    (18) expresion -> . expresion OP_SUMA termino
    (19) expresion -> . termino
    (20) termino -> . factor
    (21) factor -> . CTE_ENT
    (22) factor -> . ID

    CTE_ENT         shift and go to state 18
    ID              shift and go to state 21

    expresion                      shift and go to state 16
    condicion                      shift and go to state 19
    termino                        shift and go to state 20
    factor                         shift and go to state 17

state 13

    (8) sentencia_while -> PR_WHILE PAREN_ABRE . condicion PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE bloque CIERRA_BLOQUE
    (12) condicion -> . expresion OP_MAYOR expresion
    (13) condicion -> . expresion OP_MENOR expresion
    (14) condicion -> . expresion OP_MENORIGUAL expresion
    (15) condicion -> . expresion OP_DISTINTO expresion
    (16) condicion -> . condicion PR_AND condicion
    (17) condicion -> . condicion PR_OR condicion
    (18) expresion -> . expresion OP_SUMA termino
    (19) expresion -> . termino
    (20) termino -> . factor
    (21) factor -> . CTE_ENT
    (22) factor -> . ID

    CTE_ENT         shift and go to state 18
    ID              shift and go to state 21

    expresion                      shift and go to state 16
    condicion                      shift and go to state 22
    termino                        shift and go to state 20
    factor                         shift and go to state 17

state 14

    (10) asig -> ID OP_AS . expresion
    (11) asig -> ID OP_AS . asig
    (18) expresion -> . expresion OP_SUMA termino
    (19) expresion -> . termino
    (10) asig -> . ID OP_AS expresion
    (11) asig -> . ID OP_AS asig
    (20) termino -> . factor
    (21) factor -> . CTE_ENT
    (22) factor -> . ID

    ID              shift and go to state 25
    CTE_ENT         shift and go to state 18

    expresion                      shift and go to state 23
    asig                           shift and go to state 24
    termino                        shift and go to state 20
    factor                         shift and go to state 17

state 15

    (7) sentencia -> sentencia FIN_LINEA sentencia .
    (7) sentencia -> sentencia . FIN_LINEA sentencia

  ! shift/reduce conflict for FIN_LINEA resolved as shift
    ID              reduce using rule 7 (sentencia -> sentencia FIN_LINEA sentencia .)
    PR_IF           reduce using rule 7 (sentencia -> sentencia FIN_LINEA sentencia .)
    PR_WHILE        reduce using rule 7 (sentencia -> sentencia FIN_LINEA sentencia .)
    CIERRA_BLOQUE   reduce using rule 7 (sentencia -> sentencia FIN_LINEA sentencia .)
    $end            reduce using rule 7 (sentencia -> sentencia FIN_LINEA sentencia .)
    FIN_LINEA       shift and go to state 10

  ! FIN_LINEA       [ reduce using rule 7 (sentencia -> sentencia FIN_LINEA sentencia .) ]


state 16

    (12) condicion -> expresion . OP_MAYOR expresion
    (13) condicion -> expresion . OP_MENOR expresion
    (14) condicion -> expresion . OP_MENORIGUAL expresion
    (15) condicion -> expresion . OP_DISTINTO expresion
    (18) expresion -> expresion . OP_SUMA termino

    OP_MAYOR        shift and go to state 27
    OP_MENOR        shift and go to state 29
    OP_MENORIGUAL   shift and go to state 26
    OP_DISTINTO     shift and go to state 30
    OP_SUMA         shift and go to state 28


state 17

    (20) termino -> factor .

    OP_SUMA         reduce using rule 20 (termino -> factor .)
    PAREN_CIERRA    reduce using rule 20 (termino -> factor .)
    PR_AND          reduce using rule 20 (termino -> factor .)
    PR_OR           reduce using rule 20 (termino -> factor .)
    OP_MAYOR        reduce using rule 20 (termino -> factor .)
    OP_MENOR        reduce using rule 20 (termino -> factor .)
    OP_MENORIGUAL   reduce using rule 20 (termino -> factor .)
    OP_DISTINTO     reduce using rule 20 (termino -> factor .)
    FIN_LINEA       reduce using rule 20 (termino -> factor .)
    ID              reduce using rule 20 (termino -> factor .)
    PR_IF           reduce using rule 20 (termino -> factor .)
    PR_WHILE        reduce using rule 20 (termino -> factor .)
    $end            reduce using rule 20 (termino -> factor .)
    CIERRA_BLOQUE   reduce using rule 20 (termino -> factor .)


state 18

    (21) factor -> CTE_ENT .

    OP_MAYOR        reduce using rule 21 (factor -> CTE_ENT .)
    OP_MENOR        reduce using rule 21 (factor -> CTE_ENT .)
    OP_MENORIGUAL   reduce using rule 21 (factor -> CTE_ENT .)
    OP_DISTINTO     reduce using rule 21 (factor -> CTE_ENT .)
    OP_SUMA         reduce using rule 21 (factor -> CTE_ENT .)
    FIN_LINEA       reduce using rule 21 (factor -> CTE_ENT .)
    ID              reduce using rule 21 (factor -> CTE_ENT .)
    PR_IF           reduce using rule 21 (factor -> CTE_ENT .)
    PR_WHILE        reduce using rule 21 (factor -> CTE_ENT .)
    $end            reduce using rule 21 (factor -> CTE_ENT .)
    CIERRA_BLOQUE   reduce using rule 21 (factor -> CTE_ENT .)
    PAREN_CIERRA    reduce using rule 21 (factor -> CTE_ENT .)
    PR_AND          reduce using rule 21 (factor -> CTE_ENT .)
    PR_OR           reduce using rule 21 (factor -> CTE_ENT .)


state 19

    (9) sentencia_condicional -> PR_IF PAREN_ABRE condicion . PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE bloque CIERRA_BLOQUE
    (16) condicion -> condicion . PR_AND condicion
    (17) condicion -> condicion . PR_OR condicion

    PAREN_CIERRA    shift and go to state 31
    PR_AND          shift and go to state 32
    PR_OR           shift and go to state 33


state 20

    (19) expresion -> termino .

    OP_SUMA         reduce using rule 19 (expresion -> termino .)
    PAREN_CIERRA    reduce using rule 19 (expresion -> termino .)
    PR_AND          reduce using rule 19 (expresion -> termino .)
    PR_OR           reduce using rule 19 (expresion -> termino .)
    FIN_LINEA       reduce using rule 19 (expresion -> termino .)
    ID              reduce using rule 19 (expresion -> termino .)
    PR_IF           reduce using rule 19 (expresion -> termino .)
    PR_WHILE        reduce using rule 19 (expresion -> termino .)
    $end            reduce using rule 19 (expresion -> termino .)
    CIERRA_BLOQUE   reduce using rule 19 (expresion -> termino .)
    OP_MAYOR        reduce using rule 19 (expresion -> termino .)
    OP_MENOR        reduce using rule 19 (expresion -> termino .)
    OP_MENORIGUAL   reduce using rule 19 (expresion -> termino .)
    OP_DISTINTO     reduce using rule 19 (expresion -> termino .)


state 21

    (22) factor -> ID .

    OP_MAYOR        reduce using rule 22 (factor -> ID .)
    OP_MENOR        reduce using rule 22 (factor -> ID .)
    OP_MENORIGUAL   reduce using rule 22 (factor -> ID .)
    OP_DISTINTO     reduce using rule 22 (factor -> ID .)
    OP_SUMA         reduce using rule 22 (factor -> ID .)
    FIN_LINEA       reduce using rule 22 (factor -> ID .)
    ID              reduce using rule 22 (factor -> ID .)
    PR_IF           reduce using rule 22 (factor -> ID .)
    PR_WHILE        reduce using rule 22 (factor -> ID .)
    $end            reduce using rule 22 (factor -> ID .)
    CIERRA_BLOQUE   reduce using rule 22 (factor -> ID .)
    PAREN_CIERRA    reduce using rule 22 (factor -> ID .)
    PR_AND          reduce using rule 22 (factor -> ID .)
    PR_OR           reduce using rule 22 (factor -> ID .)


state 22

    (8) sentencia_while -> PR_WHILE PAREN_ABRE condicion . PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE bloque CIERRA_BLOQUE
    (16) condicion -> condicion . PR_AND condicion
    (17) condicion -> condicion . PR_OR condicion

    PAREN_CIERRA    shift and go to state 34
    PR_AND          shift and go to state 32
    PR_OR           shift and go to state 33


state 23

    (10) asig -> ID OP_AS expresion .
    (18) expresion -> expresion . OP_SUMA termino

    FIN_LINEA       reduce using rule 10 (asig -> ID OP_AS expresion .)
    ID              reduce using rule 10 (asig -> ID OP_AS expresion .)
    PR_IF           reduce using rule 10 (asig -> ID OP_AS expresion .)
    PR_WHILE        reduce using rule 10 (asig -> ID OP_AS expresion .)
    CIERRA_BLOQUE   reduce using rule 10 (asig -> ID OP_AS expresion .)
    $end            reduce using rule 10 (asig -> ID OP_AS expresion .)
    OP_SUMA         shift and go to state 28


state 24

    (11) asig -> ID OP_AS asig .

    FIN_LINEA       reduce using rule 11 (asig -> ID OP_AS asig .)
    ID              reduce using rule 11 (asig -> ID OP_AS asig .)
    PR_IF           reduce using rule 11 (asig -> ID OP_AS asig .)
    PR_WHILE        reduce using rule 11 (asig -> ID OP_AS asig .)
    CIERRA_BLOQUE   reduce using rule 11 (asig -> ID OP_AS asig .)
    $end            reduce using rule 11 (asig -> ID OP_AS asig .)


state 25

    (10) asig -> ID . OP_AS expresion
    (11) asig -> ID . OP_AS asig
    (22) factor -> ID .

    OP_AS           shift and go to state 14
    OP_SUMA         reduce using rule 22 (factor -> ID .)
    FIN_LINEA       reduce using rule 22 (factor -> ID .)
    ID              reduce using rule 22 (factor -> ID .)
    PR_IF           reduce using rule 22 (factor -> ID .)
    PR_WHILE        reduce using rule 22 (factor -> ID .)
    $end            reduce using rule 22 (factor -> ID .)
    CIERRA_BLOQUE   reduce using rule 22 (factor -> ID .)


state 26

    (14) condicion -> expresion OP_MENORIGUAL . expresion
    (18) expresion -> . expresion OP_SUMA termino
    (19) expresion -> . termino
    (20) termino -> . factor
    (21) factor -> . CTE_ENT
    (22) factor -> . ID

    CTE_ENT         shift and go to state 18
    ID              shift and go to state 21

    expresion                      shift and go to state 35
    termino                        shift and go to state 20
    factor                         shift and go to state 17

state 27

    (12) condicion -> expresion OP_MAYOR . expresion
    (18) expresion -> . expresion OP_SUMA termino
    (19) expresion -> . termino
    (20) termino -> . factor
    (21) factor -> . CTE_ENT
    (22) factor -> . ID

    CTE_ENT         shift and go to state 18
    ID              shift and go to state 21

    expresion                      shift and go to state 36
    termino                        shift and go to state 20
    factor                         shift and go to state 17

state 28

    (18) expresion -> expresion OP_SUMA . termino
    (20) termino -> . factor
    (21) factor -> . CTE_ENT
    (22) factor -> . ID

    CTE_ENT         shift and go to state 18
    ID              shift and go to state 21

    termino                        shift and go to state 37
    factor                         shift and go to state 17

state 29

    (13) condicion -> expresion OP_MENOR . expresion
    (18) expresion -> . expresion OP_SUMA termino
    (19) expresion -> . termino
    (20) termino -> . factor
    (21) factor -> . CTE_ENT
    (22) factor -> . ID

    CTE_ENT         shift and go to state 18
    ID              shift and go to state 21

    expresion                      shift and go to state 38
    termino                        shift and go to state 20
    factor                         shift and go to state 17

state 30

    (15) condicion -> expresion OP_DISTINTO . expresion
    (18) expresion -> . expresion OP_SUMA termino
    (19) expresion -> . termino
    (20) termino -> . factor
    (21) factor -> . CTE_ENT
    (22) factor -> . ID

    CTE_ENT         shift and go to state 18
    ID              shift and go to state 21

    expresion                      shift and go to state 39
    termino                        shift and go to state 20
    factor                         shift and go to state 17

state 31

    (9) sentencia_condicional -> PR_IF PAREN_ABRE condicion PAREN_CIERRA . DOS_PUNTOS ABRE_BLOQUE bloque CIERRA_BLOQUE

    DOS_PUNTOS      shift and go to state 40


state 32

    (16) condicion -> condicion PR_AND . condicion
    (12) condicion -> . expresion OP_MAYOR expresion
    (13) condicion -> . expresion OP_MENOR expresion
    (14) condicion -> . expresion OP_MENORIGUAL expresion
    (15) condicion -> . expresion OP_DISTINTO expresion
    (16) condicion -> . condicion PR_AND condicion
    (17) condicion -> . condicion PR_OR condicion
    (18) expresion -> . expresion OP_SUMA termino
    (19) expresion -> . termino
    (20) termino -> . factor
    (21) factor -> . CTE_ENT
    (22) factor -> . ID

    CTE_ENT         shift and go to state 18
    ID              shift and go to state 21

    expresion                      shift and go to state 16
    condicion                      shift and go to state 41
    termino                        shift and go to state 20
    factor                         shift and go to state 17

state 33

    (17) condicion -> condicion PR_OR . condicion
    (12) condicion -> . expresion OP_MAYOR expresion
    (13) condicion -> . expresion OP_MENOR expresion
    (14) condicion -> . expresion OP_MENORIGUAL expresion
    (15) condicion -> . expresion OP_DISTINTO expresion
    (16) condicion -> . condicion PR_AND condicion
    (17) condicion -> . condicion PR_OR condicion
    (18) expresion -> . expresion OP_SUMA termino
    (19) expresion -> . termino
    (20) termino -> . factor
    (21) factor -> . CTE_ENT
    (22) factor -> . ID

    CTE_ENT         shift and go to state 18
    ID              shift and go to state 21

    expresion                      shift and go to state 16
    condicion                      shift and go to state 42
    termino                        shift and go to state 20
    factor                         shift and go to state 17

state 34

    (8) sentencia_while -> PR_WHILE PAREN_ABRE condicion PAREN_CIERRA . DOS_PUNTOS ABRE_BLOQUE bloque CIERRA_BLOQUE

    DOS_PUNTOS      shift and go to state 43


state 35

    (14) condicion -> expresion OP_MENORIGUAL expresion .
    (18) expresion -> expresion . OP_SUMA termino

    PAREN_CIERRA    reduce using rule 14 (condicion -> expresion OP_MENORIGUAL expresion .)
    PR_AND          reduce using rule 14 (condicion -> expresion OP_MENORIGUAL expresion .)
    PR_OR           reduce using rule 14 (condicion -> expresion OP_MENORIGUAL expresion .)
    OP_SUMA         shift and go to state 28


state 36

    (12) condicion -> expresion OP_MAYOR expresion .
    (18) expresion -> expresion . OP_SUMA termino

    PAREN_CIERRA    reduce using rule 12 (condicion -> expresion OP_MAYOR expresion .)
    PR_AND          reduce using rule 12 (condicion -> expresion OP_MAYOR expresion .)
    PR_OR           reduce using rule 12 (condicion -> expresion OP_MAYOR expresion .)
    OP_SUMA         shift and go to state 28


state 37

    (18) expresion -> expresion OP_SUMA termino .

    OP_SUMA         reduce using rule 18 (expresion -> expresion OP_SUMA termino .)
    PAREN_CIERRA    reduce using rule 18 (expresion -> expresion OP_SUMA termino .)
    PR_AND          reduce using rule 18 (expresion -> expresion OP_SUMA termino .)
    PR_OR           reduce using rule 18 (expresion -> expresion OP_SUMA termino .)
    FIN_LINEA       reduce using rule 18 (expresion -> expresion OP_SUMA termino .)
    ID              reduce using rule 18 (expresion -> expresion OP_SUMA termino .)
    PR_IF           reduce using rule 18 (expresion -> expresion OP_SUMA termino .)
    PR_WHILE        reduce using rule 18 (expresion -> expresion OP_SUMA termino .)
    $end            reduce using rule 18 (expresion -> expresion OP_SUMA termino .)
    CIERRA_BLOQUE   reduce using rule 18 (expresion -> expresion OP_SUMA termino .)
    OP_MAYOR        reduce using rule 18 (expresion -> expresion OP_SUMA termino .)
    OP_MENOR        reduce using rule 18 (expresion -> expresion OP_SUMA termino .)
    OP_MENORIGUAL   reduce using rule 18 (expresion -> expresion OP_SUMA termino .)
    OP_DISTINTO     reduce using rule 18 (expresion -> expresion OP_SUMA termino .)


state 38

    (13) condicion -> expresion OP_MENOR expresion .
    (18) expresion -> expresion . OP_SUMA termino

    PAREN_CIERRA    reduce using rule 13 (condicion -> expresion OP_MENOR expresion .)
    PR_AND          reduce using rule 13 (condicion -> expresion OP_MENOR expresion .)
    PR_OR           reduce using rule 13 (condicion -> expresion OP_MENOR expresion .)
    OP_SUMA         shift and go to state 28


state 39

    (15) condicion -> expresion OP_DISTINTO expresion .
    (18) expresion -> expresion . OP_SUMA termino

    PAREN_CIERRA    reduce using rule 15 (condicion -> expresion OP_DISTINTO expresion .)
    PR_AND          reduce using rule 15 (condicion -> expresion OP_DISTINTO expresion .)
    PR_OR           reduce using rule 15 (condicion -> expresion OP_DISTINTO expresion .)
    OP_SUMA         shift and go to state 28


state 40

    (9) sentencia_condicional -> PR_IF PAREN_ABRE condicion PAREN_CIERRA DOS_PUNTOS . ABRE_BLOQUE bloque CIERRA_BLOQUE

    ABRE_BLOQUE     shift and go to state 44


state 41

    (16) condicion -> condicion PR_AND condicion .
    (16) condicion -> condicion . PR_AND condicion
    (17) condicion -> condicion . PR_OR condicion

  ! shift/reduce conflict for PR_AND resolved as shift
  ! shift/reduce conflict for PR_OR resolved as shift
    PAREN_CIERRA    reduce using rule 16 (condicion -> condicion PR_AND condicion .)
    PR_AND          shift and go to state 32
    PR_OR           shift and go to state 33

  ! PR_AND          [ reduce using rule 16 (condicion -> condicion PR_AND condicion .) ]
  ! PR_OR           [ reduce using rule 16 (condicion -> condicion PR_AND condicion .) ]


state 42

    (17) condicion -> condicion PR_OR condicion .
    (16) condicion -> condicion . PR_AND condicion
    (17) condicion -> condicion . PR_OR condicion

  ! shift/reduce conflict for PR_AND resolved as shift
  ! shift/reduce conflict for PR_OR resolved as shift
    PAREN_CIERRA    reduce using rule 17 (condicion -> condicion PR_OR condicion .)
    PR_AND          shift and go to state 32
    PR_OR           shift and go to state 33

  ! PR_AND          [ reduce using rule 17 (condicion -> condicion PR_OR condicion .) ]
  ! PR_OR           [ reduce using rule 17 (condicion -> condicion PR_OR condicion .) ]


state 43

    (8) sentencia_while -> PR_WHILE PAREN_ABRE condicion PAREN_CIERRA DOS_PUNTOS . ABRE_BLOQUE bloque CIERRA_BLOQUE

    ABRE_BLOQUE     shift and go to state 45


state 44

    (9) sentencia_condicional -> PR_IF PAREN_ABRE condicion PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE . bloque CIERRA_BLOQUE
    (2) bloque -> . sentencia bloque
    (3) bloque -> . sentencia
    (4) sentencia -> . asig
    (5) sentencia -> . sentencia_condicional
    (6) sentencia -> . sentencia_while
    (7) sentencia -> . sentencia FIN_LINEA sentencia
    (10) asig -> . ID OP_AS expresion
    (11) asig -> . ID OP_AS asig
    (9) sentencia_condicional -> . PR_IF PAREN_ABRE condicion PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE bloque CIERRA_BLOQUE
    (8) sentencia_while -> . PR_WHILE PAREN_ABRE condicion PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE bloque CIERRA_BLOQUE

    ID              shift and go to state 8
    PR_IF           shift and go to state 4
    PR_WHILE        shift and go to state 7

    sentencia                      shift and go to state 1
    sentencia_while                shift and go to state 2
    asig                           shift and go to state 3
    sentencia_condicional          shift and go to state 9
    bloque                         shift and go to state 46

state 45

    (8) sentencia_while -> PR_WHILE PAREN_ABRE condicion PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE . bloque CIERRA_BLOQUE
    (2) bloque -> . sentencia bloque
    (3) bloque -> . sentencia
    (4) sentencia -> . asig
    (5) sentencia -> . sentencia_condicional
    (6) sentencia -> . sentencia_while
    (7) sentencia -> . sentencia FIN_LINEA sentencia
    (10) asig -> . ID OP_AS expresion
    (11) asig -> . ID OP_AS asig
    (9) sentencia_condicional -> . PR_IF PAREN_ABRE condicion PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE bloque CIERRA_BLOQUE
    (8) sentencia_while -> . PR_WHILE PAREN_ABRE condicion PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE bloque CIERRA_BLOQUE

    ID              shift and go to state 8
    PR_IF           shift and go to state 4
    PR_WHILE        shift and go to state 7

    sentencia                      shift and go to state 1
    sentencia_while                shift and go to state 2
    asig                           shift and go to state 3
    sentencia_condicional          shift and go to state 9
    bloque                         shift and go to state 47

state 46

    (9) sentencia_condicional -> PR_IF PAREN_ABRE condicion PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE bloque . CIERRA_BLOQUE

    CIERRA_BLOQUE   shift and go to state 48


state 47

    (8) sentencia_while -> PR_WHILE PAREN_ABRE condicion PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE bloque . CIERRA_BLOQUE

    CIERRA_BLOQUE   shift and go to state 49


state 48

    (9) sentencia_condicional -> PR_IF PAREN_ABRE condicion PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE bloque CIERRA_BLOQUE .

    FIN_LINEA       reduce using rule 9 (sentencia_condicional -> PR_IF PAREN_ABRE condicion PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE bloque CIERRA_BLOQUE .)
    ID              reduce using rule 9 (sentencia_condicional -> PR_IF PAREN_ABRE condicion PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE bloque CIERRA_BLOQUE .)
    PR_IF           reduce using rule 9 (sentencia_condicional -> PR_IF PAREN_ABRE condicion PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE bloque CIERRA_BLOQUE .)
    PR_WHILE        reduce using rule 9 (sentencia_condicional -> PR_IF PAREN_ABRE condicion PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE bloque CIERRA_BLOQUE .)
    $end            reduce using rule 9 (sentencia_condicional -> PR_IF PAREN_ABRE condicion PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE bloque CIERRA_BLOQUE .)
    CIERRA_BLOQUE   reduce using rule 9 (sentencia_condicional -> PR_IF PAREN_ABRE condicion PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE bloque CIERRA_BLOQUE .)


state 49

    (8) sentencia_while -> PR_WHILE PAREN_ABRE condicion PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE bloque CIERRA_BLOQUE .

    FIN_LINEA       reduce using rule 8 (sentencia_while -> PR_WHILE PAREN_ABRE condicion PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE bloque CIERRA_BLOQUE .)
    ID              reduce using rule 8 (sentencia_while -> PR_WHILE PAREN_ABRE condicion PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE bloque CIERRA_BLOQUE .)
    PR_IF           reduce using rule 8 (sentencia_while -> PR_WHILE PAREN_ABRE condicion PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE bloque CIERRA_BLOQUE .)
    PR_WHILE        reduce using rule 8 (sentencia_while -> PR_WHILE PAREN_ABRE condicion PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE bloque CIERRA_BLOQUE .)
    $end            reduce using rule 8 (sentencia_while -> PR_WHILE PAREN_ABRE condicion PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE bloque CIERRA_BLOQUE .)
    CIERRA_BLOQUE   reduce using rule 8 (sentencia_while -> PR_WHILE PAREN_ABRE condicion PAREN_CIERRA DOS_PUNTOS ABRE_BLOQUE bloque CIERRA_BLOQUE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FIN_LINEA in state 15 resolved as shift
WARNING: shift/reduce conflict for PR_AND in state 41 resolved as shift
WARNING: shift/reduce conflict for PR_OR in state 41 resolved as shift
WARNING: shift/reduce conflict for PR_AND in state 42 resolved as shift
WARNING: shift/reduce conflict for PR_OR in state 42 resolved as shift
